{"version":3,"file":"index.esm.js","sources":["../src/components/ImageColorPicker/components/ColorPreview/ColorPreview.styles.ts","../src/components/ImageColorPicker/components/ColorPreview/ColorPreview.tsx","../src/components/ImageColorPicker/components/ZoomPreview/ZoomPreview.styles.ts","../src/util/canvas.tsx","../src/hooks/useMobileDetect.tsx","../src/components/ImageColorPicker/components/ZoomPreview/ZoomPreview.tsx","../src/components/ImageColorPicker/ImageColorPicker.styles.ts","../src/components/ImageColorPicker/ImageColorPicker.tsx","../src/hooks/useColorPick.tsx","../src/util/imageLoader.tsx"],"sourcesContent":["import styled from 'styled-components'\n\nexport const ColorPreviewContainer = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  width: 40px;\n  height: 40px;\n  border-radius: 10px;\n  border: 3px solid white;\n  z-index: 100;\n\n  @media (max-width: 768px) {\n    width: 30px;\n    height: 30px;\n  }\n`\n","import React from 'react'\nimport { ColorPreviewContainer } from './ColorPreview.styles'\n\ntype ColorPreviewProps = {\n  color: string\n}\n\nexport const ColorPreview = ({ color }: ColorPreviewProps) => (\n  <ColorPreviewContainer\n    data-testid='color-preview'\n    style={{\n      backgroundColor: color\n    }}\n  />\n)\n","import styled from 'styled-components'\n\nexport const ZoomPreviewContainer = styled.div`\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  z-index: 100;\n`\n\nexport const ZoomPreviewWindow = styled.div`\n  width: 100px;\n  height: 100px;\n  box-shadow: 1px 1px 1px #000;\n  border: 4px solid red;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  @media (max-width: 768px) {\n    width: 60px;\n    height: 60px;\n  }\n`\n","export type Coordinates = {\n  x: number\n  y: number\n}\n\nexport class Canvas {\n  private readonly canvas!: HTMLCanvasElement\n  private readonly context!: CanvasRenderingContext2D\n\n  constructor(canvasElement: HTMLCanvasElement) {\n    this.canvas = canvasElement\n    this.context = this.canvas.getContext('2d', {\n      willReadFrequently: true\n    }) as CanvasRenderingContext2D\n  }\n\n  public listenMovements(listener: any) {\n    this.canvas.addEventListener('touchmove', listener)\n    this.canvas.addEventListener('pointermove', listener)\n  }\n\n  public cleanUp(listener: any) {\n    this.canvas.removeEventListener('touchmove', listener)\n    this.canvas.addEventListener('pointermove', listener)\n  }\n\n  public drawImage(img: any) {\n    this.context.drawImage(img, 0, 0)\n  }\n\n  public setDimensions(width: number, height: number) {\n    this.canvas.width = width\n    this.canvas.height = height\n  }\n\n  public getDimensions() {\n    return {\n      width: this.canvas.width,\n      height: this.canvas.height\n    }\n  }\n\n  public getCanvasCenterPoint() {\n    return {\n      x: this.canvas.width / 2,\n      y: this.canvas.height / 2\n    }\n  }\n\n  public getCanvasCoordinates(coordinates: Coordinates) {\n    const rect = this.canvas.getBoundingClientRect()\n    const scaleX = this.canvas.width / rect.width\n    const scaleY = this.canvas.height / rect.height\n    const x = (coordinates.x - rect.left) * scaleX\n    const y = (coordinates.y - rect.top) * scaleY\n\n    return { x, y }\n  }\n\n  public getPixelColor(coordinates: Coordinates) {\n    const pixelData = this.context.getImageData(\n      coordinates.x,\n      coordinates.y,\n      1,\n      1\n    ).data\n    if (pixelData.length < 4) return 'rgb(0,0,0)' // Return black color if unable to retrieve pixel data\n\n    const [red, green, blue] = pixelData\n    return `rgb(${red}, ${green}, ${blue})`\n  }\n}\n","import { useEffect, useState } from 'react'\n\nexport const useMobileDetect = () => {\n  const [isMobile, setIsMobile] = useState(true)\n\n  useEffect(() => {\n    if (typeof window === 'undefined') return\n    const mediaQuery = window.matchMedia('(max-width: 768px)')\n    setIsMobile(mediaQuery.matches)\n\n    const handleMediaQueryChange = (event: MediaQueryListEvent) => {\n      setIsMobile(event.matches)\n    }\n\n    mediaQuery.addEventListener('change', handleMediaQueryChange)\n    return () => {\n      mediaQuery.removeEventListener('change', handleMediaQueryChange)\n    }\n  }, [])\n\n  return isMobile\n}\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react'\nimport { Coordinates } from '@/src/util'\nimport { ZoomPreviewContainer, ZoomPreviewWindow } from './ZoomPreview.styles'\nimport { useMobileDetect } from '@/src/hooks'\n\ntype ColorPreviewProps = {\n  coordinates: Coordinates\n  color: string\n  dimensions: { width: number; height: number }\n  image: string\n  zoom?: number\n}\n\nexport const ZoomPreview = ({\n  color,\n  coordinates,\n  dimensions,\n  image,\n  zoom = 0.5\n}: ColorPreviewProps) => {\n  const isMobile = useMobileDetect()\n\n  const { x, y } = coordinates\n  const zoomFactor = zoom\n  const errorMargin = isMobile ? 30 : 50\n\n  const zoomWidth = dimensions.width * zoomFactor\n  const zoomHeight = dimensions.height * zoomFactor\n  const imgPosX = x * zoomFactor - errorMargin\n  const imgPosY = y * zoomFactor - errorMargin\n\n  return (\n    <React.Fragment>\n      <ZoomPreviewContainer data-testid='zoom-preview-container'>\n        <ZoomPreviewWindow\n          data-testid='zoom-preview'\n          style={{\n            backgroundSize: `${zoomWidth}px ${zoomHeight}px`,\n            backgroundImage: `url(${image})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: `-${imgPosX}px -${imgPosY}px`,\n            borderColor: color\n          }}\n        />\n      </ZoomPreviewContainer>\n    </React.Fragment>\n  )\n}\n","import styled from 'styled-components'\n\nexport const ImageColorPickCanvas = styled.canvas`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  z-index: 50;\n  touch-action: none;\n  object-fit: cover;\n`\n\nexport const ImageColorPickContainer = styled.div`\n  position: relative;\n  display: flex;\n  width: 100%;\n  height: 100%;\n`\n","/* eslint-disable react/no-unknown-property */\nimport React, { useRef } from 'react'\nimport { ColorPreview, ZoomPreview } from './components'\nimport {\n  ImageColorPickCanvas,\n  ImageColorPickContainer\n} from './ImageColorPicker.styles'\nimport { useColorPick } from '@/src/hooks'\nimport { ImageColorPickerProps } from './ImageColorPicker.types'\n\nconst ImageColorPicker = ({\n  onColorPick,\n  imgSrc,\n  zoom\n}: ImageColorPickerProps) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n  const { color, coordinates, dimensions } = useColorPick(canvasRef, imgSrc)\n\n  return (\n    <ImageColorPickContainer data-testid='image-color-pick-container'>\n      <ColorPreview color={color} />\n      <ZoomPreview\n        zoom={zoom}\n        color={color}\n        coordinates={coordinates}\n        dimensions={dimensions}\n        image={imgSrc}\n      />\n      <ImageColorPickCanvas\n        data-testid='image-color-pick-canvas'\n        id='image-color-pick-canvas'\n        ref={canvasRef}\n        onClick={() => onColorPick(color)}\n        onTouchEnd={() => onColorPick(color)}\n      />\n    </ImageColorPickContainer>\n  )\n}\n\nexport default ImageColorPicker\n","import { useEffect, useRef, useState } from 'react'\nimport { Canvas, loadImageHandler } from '../util'\n\nexport function useColorPick(\n  canvasRef: React.RefObject<HTMLCanvasElement>,\n  imgSrc: string\n) {\n  const canvasInstanceRef = useRef<Canvas | null>(null)\n\n  const [color, setColor] = useState<string>('tranparent')\n  const [coordinates, setCoordinates] = useState({ x: 0, y: 0 })\n\n  const onMove = (\n    event: TouchEvent | React.PointerEvent<HTMLCanvasElement>\n  ) => {\n    event.preventDefault()\n\n    const eventCoods = 'touches' in event ? event.touches[0] : event\n    const coordinates = { x: eventCoods.clientX, y: eventCoods.clientY }\n\n    const canvas = canvasInstanceRef.current as Canvas\n    const canvasCoordinates = canvas.getCanvasCoordinates(coordinates)\n    const color = canvas.getPixelColor(canvasCoordinates)\n    setColor(color)\n    setCoordinates(canvasCoordinates)\n  }\n\n  useEffect(() => {\n    if (canvasInstanceRef.current === null) {\n      canvasInstanceRef.current = new Canvas(canvasRef.current!)\n      canvasInstanceRef.current.listenMovements(onMove)\n    }\n\n    const canvas = canvasInstanceRef.current\n\n    async function initializeCanvas() {\n      const image = await loadImageHandler(imgSrc)\n      canvas.setDimensions(image.width, image.height)\n      canvas.drawImage(image)\n\n      const centerPoint = canvas.getCanvasCenterPoint()\n      const initialColor = canvas.getPixelColor(centerPoint)\n\n      setColor(initialColor)\n      setCoordinates(centerPoint)\n    }\n\n    initializeCanvas()\n\n    return () => {\n      canvas.cleanUp(onMove)\n    }\n  }, [imgSrc])\n\n  return {\n    color,\n    coordinates,\n    dimensions: canvasInstanceRef.current?.getDimensions() ?? {\n      width: 0,\n      height: 0\n    }\n  }\n}\n","export const loadImageHandler = async (src: any): Promise<HTMLImageElement> => {\n  return new Promise((resolve) => {\n    const img = new Image()\n    img.crossOrigin = 'Anonymous'\n    img.onload = () => resolve(img)\n    img.src = src\n  })\n}\n"],"names":["ColorPreviewContainer","styled","div","templateObject_1","__makeTemplateObject","ColorPreview","_a","color","React","createElement","style","backgroundColor","ZoomPreviewContainer","ZoomPreviewWindow","templateObject_2","Canvas","canvasElement","this","canvas","context","getContext","willReadFrequently","prototype","listenMovements","listener","addEventListener","cleanUp","removeEventListener","drawImage","img","setDimensions","width","height","getDimensions","getCanvasCenterPoint","x","y","getCanvasCoordinates","coordinates","rect","getBoundingClientRect","scaleX","scaleY","left","top","getPixelColor","pixelData","getImageData","data","length","__read","red","green","blue","concat","ZoomPreview","dimensions","image","_b","zoom","isMobile","useState","setIsMobile","useEffect","window","mediaQuery","matchMedia","matches","handleMediaQueryChange","event","useMobileDetect","zoomFactor","errorMargin","zoomWidth","zoomHeight","imgPosX","imgPosY","Fragment","backgroundSize","backgroundImage","backgroundRepeat","backgroundPosition","borderColor","ImageColorPickCanvas","ImageColorPickContainer","ImageColorPicker","onColorPick","imgSrc","canvasRef","useRef","canvasInstanceRef","_c","setColor","_d","setCoordinates","onMove","preventDefault","eventCoods","touches","clientX","clientY","current","canvasCoordinates","src","__awaiter","Promise","resolve","Image","crossOrigin","onload","sent","centerPoint","initialColor","initializeCanvas","useColorPick","id","ref","onClick","onTouchEnd"],"mappings":"yzDAEO,UAAMA,EAAwBC,EAAOC,IAAGC,IAAAA,EAAAC,EAAA,CAAA,4OAAA,CAAA,+OCKlCC,EAAe,SAACC,GAAE,IAAAC,EAAKD,EAAAC,MAA0B,OAC5DC,EAACC,cAAAT,iBACa,gBACZU,MAAO,CACLC,gBAAiBJ,IAJuC,ECLjDK,EAAuBX,EAAOC,IAAGC,IAAAA,EAAAC,EAAA,CAAA,gJAAA,CAAA,mJAUjCS,EAAoBZ,EAAOC,IAAGY,IAAAA,EAAAV,EAAA,CAAA,4QAAA,CAAA,+QCP3CW,EAAA,WAIE,SAAAA,EAAYC,GACVC,KAAKC,OAASF,EACdC,KAAKE,QAAUF,KAAKC,OAAOE,WAAW,KAAM,CAC1CC,oBAAoB,GAEvB,CAyDH,OAvDSN,EAAeO,UAAAC,gBAAtB,SAAuBC,GACrBP,KAAKC,OAAOO,iBAAiB,YAAaD,GAC1CP,KAAKC,OAAOO,iBAAiB,cAAeD,IAGvCT,EAAOO,UAAAI,QAAd,SAAeF,GACbP,KAAKC,OAAOS,oBAAoB,YAAaH,GAC7CP,KAAKC,OAAOO,iBAAiB,cAAeD,IAGvCT,EAASO,UAAAM,UAAhB,SAAiBC,GACfZ,KAAKE,QAAQS,UAAUC,EAAK,EAAG,IAG1Bd,EAAAO,UAAAQ,cAAP,SAAqBC,EAAeC,GAClCf,KAAKC,OAAOa,MAAQA,EACpBd,KAAKC,OAAOc,OAASA,GAGhBjB,EAAAO,UAAAW,cAAP,WACE,MAAO,CACLF,MAAOd,KAAKC,OAAOa,MACnBC,OAAQf,KAAKC,OAAOc,SAIjBjB,EAAAO,UAAAY,qBAAP,WACE,MAAO,CACLC,EAAGlB,KAAKC,OAAOa,MAAQ,EACvBK,EAAGnB,KAAKC,OAAOc,OAAS,IAIrBjB,EAAoBO,UAAAe,qBAA3B,SAA4BC,GAC1B,IAAMC,EAAOtB,KAAKC,OAAOsB,wBACnBC,EAASxB,KAAKC,OAAOa,MAAQQ,EAAKR,MAClCW,EAASzB,KAAKC,OAAOc,OAASO,EAAKP,OAIzC,MAAO,CAAEG,GAHEG,EAAYH,EAAII,EAAKI,MAAQF,EAG5BL,GAFDE,EAAYF,EAAIG,EAAKK,KAAOF,IAKlC3B,EAAaO,UAAAuB,cAApB,SAAqBP,GACnB,IAAMQ,EAAY7B,KAAKE,QAAQ4B,aAC7BT,EAAYH,EACZG,EAAYF,EACZ,EACA,GACAY,KACF,GAAIF,EAAUG,OAAS,EAAG,MAAO,aAE3B,IAAA3C,EAAA4C,EAAqBJ,EAAS,GAA7BK,EAAG7C,EAAA,GAAE8C,EAAK9C,EAAA,GAAE+C,OACnB,MAAO,cAAOF,EAAG,MAAAG,OAAKF,EAAU,MAAAE,OAAAD,QAEnCtC,CAAD,ICrEO,QCYMwC,EAAc,SAACjD,GAC1B,IAAAC,UACA+B,EAAWhC,EAAAgC,YACXkB,EAAUlD,EAAAkD,WACVC,EAAKnD,EAAAmD,MACLC,EAAUpD,EAAAqD,KAAVA,OAAI,IAAAD,EAAG,GAAGA,EAEJE,EDnBuB,WACvB,IAAAtD,EAAA4C,EAA0BW,GAAS,GAAK,GAAvCD,EAAQtD,EAAA,GAAEwD,OAiBjB,OAfAC,GAAU,WACR,GAAsB,oBAAXC,OAAX,CACA,IAAMC,EAAaD,OAAOE,WAAW,sBACrCJ,EAAYG,EAAWE,SAEvB,IAAMC,EAAyB,SAACC,GAC9BP,EAAYO,EAAMF,QACpB,EAGA,OADAF,EAAWxC,iBAAiB,SAAU2C,GAC/B,WACLH,EAAWtC,oBAAoB,SAAUyC,EAC3C,CAXyC,CAY1C,GAAE,IAEIR,CACT,CCAmBU,GAETnC,EAASG,EAAWH,EAAjBC,EAAME,EAAWF,EACtBmC,EAAaZ,EACba,EAAcZ,EAAW,GAAK,GAE9Ba,EAAYjB,EAAWzB,MAAQwC,EAC/BG,EAAalB,EAAWxB,OAASuC,EACjCI,EAAUxC,EAAIoC,EAAaC,EAC3BI,EAAUxC,EAAImC,EAAaC,EAEjC,OACEhE,EAAAC,cAACD,EAAMqE,SAAQ,KACbrE,EAACC,cAAAG,iBAAiC,0BAChCJ,EAAAC,cAACI,EAAiB,CAAA,cACJ,eACZH,MAAO,CACLoE,eAAgB,GAAAxB,OAAGmB,EAAS,OAAAnB,OAAMoB,EAAc,MAChDK,gBAAiB,OAAOzB,OAAAG,EAAQ,KAChCuB,iBAAkB,YAClBC,mBAAoB,IAAA3B,OAAIqB,EAAO,QAAArB,OAAOsB,EAAW,MACjDM,YAAa3E,MAMzB,EC9Ca4E,EAAuBlF,EAAOiB,OAAMf,IAAAA,EAAAC,EAAA,CAAA,kJAAA,CAAA,qJAWpCgF,EAA0BnF,EAAOC,IAAGY,IAAAA,EAAAV,EAAA,CAAA,gFAAA,CAAA,mFCH3CiF,EAAmB,SAAC/E,GACxB,IAAAgF,gBACAC,EAAMjF,EAAAiF,OACN5B,EAAIrD,EAAAqD,KAEE6B,EAAYC,EAA0B,MACtC/B,ECbQ,SACd8B,EACAD,WAEMG,EAAoBD,EAAsB,MAE1CE,EAAAzC,EAAoBW,EAAiB,cAAa,GAAjDtD,EAAKoF,EAAA,GAAEC,OACRC,EAAA3C,EAAgCW,EAAS,CAAE1B,EAAG,EAAGC,EAAG,IAAI,GAAvDE,EAAWuD,EAAA,GAAEC,EAAcD,EAAA,GAE5BE,EAAS,SACb1B,GAEAA,EAAM2B,iBAEN,IAAMC,EAAa,YAAa5B,EAAQA,EAAM6B,QAAQ,GAAK7B,EACrD/B,EAAc,CAAEH,EAAG8D,EAAWE,QAAS/D,EAAG6D,EAAWG,SAErDlF,EAASwE,EAAkBW,QAC3BC,EAAoBpF,EAAOmB,qBAAqBC,GAChD/B,EAAQW,EAAO2B,cAAcyD,GACnCV,EAASrF,GACTuF,EAAeQ,EACjB,EA6BA,OA3BAvC,GAAU,WAC0B,OAA9B2B,EAAkBW,UACpBX,EAAkBW,QAAU,IAAItF,EAAOyE,EAAUa,SACjDX,EAAkBW,QAAQ9E,gBAAgBwE,IAG5C,IAAM7E,EAASwE,EAAkBW,QAgBjC,OAdA,iGACgB,KAAA,EAAA,MAAA,CAAA,GCpCmBE,EDoCIhB,ECpCIiB,OAAA,OAAA,OAAA,GAAA,sCAC7C,MAAA,CAAA,EAAO,IAAIC,SAAQ,SAACC,GAClB,IAAM7E,EAAM,IAAI8E,MAChB9E,EAAI+E,YAAc,YAClB/E,EAAIgF,OAAS,WAAM,OAAAH,EAAQ7E,IAC3BA,EAAI0E,IAAMA,CACX,2BD8BS9C,EAAQnD,EAA8BwG,OAC5C5F,EAAOY,cAAc2B,EAAM1B,MAAO0B,EAAMzB,QACxCd,EAAOU,UAAU6B,GAEXsD,EAAc7F,EAAOgB,uBACrB8E,EAAe9F,EAAO2B,cAAckE,GAE1CnB,EAASoB,GACTlB,EAAeiB,OC5CW,IAAOR,OD6ClC,CAEDU,GAEO,WACL/F,EAAOQ,QAAQqE,EACjB,CACF,GAAG,CAACR,IAEG,CACLhF,MAAKA,EACL+B,YAAWA,EACXkB,WAA0D,UAArB,QAAzBlD,EAAAoF,EAAkBW,eAAO,IAAA/F,OAAA,EAAAA,EAAE2B,uBAAmB,IAAAyB,EAAAA,EAAA,CACxD3B,MAAO,EACPC,OAAQ,GAGd,CD9C6CkF,CAAa1B,EAAWD,GAA3DhF,EAAKmD,EAAAnD,MAAE+B,EAAWoB,EAAApB,YAAEkB,eAE5B,OACEhD,EAAAC,cAAC2E,EAAuB,CAAA,cAAa,8BACnC5E,EAAAC,cAACJ,EAAY,CAACE,MAAOA,IACrBC,EAACC,cAAA8C,GACCI,KAAMA,EACNpD,MAAOA,EACP+B,YAAaA,EACbkB,WAAYA,EACZC,MAAO8B,IAET/E,EAAAC,cAAC0E,EACa,CAAA,cAAA,0BACZgC,GAAG,0BACHC,IAAK5B,EACL6B,QAAS,WAAM,OAAA/B,EAAY/E,EAAM,EACjC+G,WAAY,WAAM,OAAAhC,EAAY/E,EAAM,IAI5C"}